//
//  APIController.h
//  UberAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/13/2016
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "RequestMapResponse.h"
#import "RequestDetailsCollections.h"
#import "UserProfile.h"
#import "ProductCollection.h"
#import "GetProductsTypesInput.h"
#import "PriceEstimateCollection.h"
#import "GetPriceEstimatesInput.h"
#import "TimeEstimateCollection.h"
#import "GetTimeEstimatesInput.h"
#import "UserActivity.h"
#import "GetUserActivityV11Input.h"
#import "PromotionsResponse.h"
#import "GetPromotionsInput.h"
#import "Request.h"
#import "RequestBody.h"
#import "Product.h"

@interface APIController : BaseController

/**
* Completion block definition for asynchronous call to Request Map */
typedef void (^CompletedGetRequestMap)(BOOL success, HttpContext* context, RequestMapResponse* response, NSError* error);

/**
* Get a map with a visual representation of a Request.
* @param    requestId    Required parameter: Unique identifier representing a Request.
*/
- (void) getRequestMapAsyncWithRequestId:(NSString*) requestId
                completionBlock:(CompletedGetRequestMap) onCompleted;

/**
* Completion block definition for asynchronous call to Request Cancel */
typedef void (^CompletedDeleteRequestCancel)(BOOL success, HttpContext* context, NSError* error);

/**
* Cancel an ongoing Request on behalf of a rider.
* @param    requestId    Required parameter: Unique identifier representing a Request.
*/
- (void) deleteRequestCancelAsyncWithRequestId:(NSString*) requestId
                completionBlock:(CompletedDeleteRequestCancel) onCompleted;

/**
* Completion block definition for asynchronous call to Request Details */
typedef void (^CompletedGetRequestDetails)(BOOL success, HttpContext* context, RequestDetailsCollections* response, NSError* error);

/**
* Get the real time status of an ongoing trip that was created using the Ride Request endpoint.
* @param    requestId    Required parameter: Example: 
*/
- (void) getRequestDetailsAsyncWithRequestId:(NSString*) requestId
                completionBlock:(CompletedGetRequestDetails) onCompleted;

/**
* Completion block definition for asynchronous call to User Profile */
typedef void (^CompletedGetUserProfile)(BOOL success, HttpContext* context, UserProfile* response, NSError* error);

/**
* The User Profile endpoint returns information about the Uber user that has authorized with the application.
*/
- (void) getUserProfileWithCompletionBlock:(CompletedGetUserProfile) onCompleted;

/**
* Completion block definition for asynchronous call to Products Types */
typedef void (^CompletedGetProductsTypes)(BOOL success, HttpContext* context, ProductCollection* response, NSError* error);

/**
* The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.
* @param  GetProductsTypesInput     Object with all parameters
*/
- (void) getProductsTypesAsyncWithGetProductsTypesInput:(GetProductsTypesInput*) input
                completionBlock:(CompletedGetProductsTypes) onCompleted;

/**
* Completion block definition for asynchronous call to Price Estimates */
typedef void (^CompletedGetPriceEstimates)(BOOL success, HttpContext* context, PriceEstimateCollection* response, NSError* error);

/**
* The Price Estimates endpoint returns an estimated price range for each product offered at a given location. The price estimate is provided as a formatted string with the full price range and the localized currency symbol.
* @param  GetPriceEstimatesInput     Object with all parameters
*/
- (void) getPriceEstimatesAsyncWithGetPriceEstimatesInput:(GetPriceEstimatesInput*) input
                completionBlock:(CompletedGetPriceEstimates) onCompleted;

/**
* Completion block definition for asynchronous call to Time Estimates */
typedef void (^CompletedGetTimeEstimates)(BOOL success, HttpContext* context, TimeEstimateCollection* response, NSError* error);

/**
* The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.
* @param  GetTimeEstimatesInput     Object with all parameters
*/
- (void) getTimeEstimatesAsyncWithGetTimeEstimatesInput:(GetTimeEstimatesInput*) input
                completionBlock:(CompletedGetTimeEstimates) onCompleted;

/**
* Completion block definition for asynchronous call to User Activity(V1.1) */
typedef void (^CompletedGetUserActivityV11)(BOOL success, HttpContext* context, UserActivity* response, NSError* error);

/**
* The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.
* @param  GetUserActivityV11Input     Object with all parameters
*/
- (void) getUserActivityV11AsyncWithGetUserActivityV11Input:(GetUserActivityV11Input*) input
                completionBlock:(CompletedGetUserActivityV11) onCompleted;

/**
* Completion block definition for asynchronous call to Promotions */
typedef void (^CompletedGetPromotions)(BOOL success, HttpContext* context, PromotionsResponse* response, NSError* error);

/**
* The Promotions endpoint returns information about the promotion that will be available to a new user based on their activity's location. These promotions do not apply for existing users.
* @param  GetPromotionsInput     Object with all parameters
*/
- (void) getPromotionsAsyncWithGetPromotionsInput:(GetPromotionsInput*) input
                completionBlock:(CompletedGetPromotions) onCompleted;

/**
* Completion block definition for asynchronous call to Request */
typedef void (^CompletedPostRequest)(BOOL success, HttpContext* context, Request* response, NSError* error);

/**
* The Request endpoint allows a ride to be requested on behalf of an Uber user given their desired product, start, and end locations. Please review the Sandbox documentation on how to develop and test against these endpoints without making real-world Requests and being charged.
* @param    body    Required parameter: Example: 
*/
- (void) createRequestAsyncWithBody:(RequestBody*) body
                completionBlock:(CompletedPostRequest) onCompleted;

/**
* Completion block definition for asynchronous call to Product Detail By ID */
typedef void (^CompletedGetProductDetailByID)(BOOL success, HttpContext* context, Product* response, NSError* error);

/**
* Get product details w.r.t id
* @param    productId    Required parameter: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
*/
- (void) getProductDetailByIDAsyncWithProductId:(NSString*) productId
                completionBlock:(CompletedGetProductDetailByID) onCompleted;

@end